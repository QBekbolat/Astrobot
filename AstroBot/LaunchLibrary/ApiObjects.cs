// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Result.FromJson(jsonString);

namespace AstroBot.LaunchLibrary
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Result
    {
        [JsonProperty("launches")]
        public Launch[] Launches { get; set; }

        [JsonProperty("total")]
        public long Total { get; set; }

        [JsonProperty("offset")]
        public long Offset { get; set; }

        [JsonProperty("count")]
        public long Count { get; set; }
    }

    public partial class Launch
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("windowstart")]
        public string Windowstart { get; set; }

        [JsonProperty("windowend")]
        public string Windowend { get; set; }

        [JsonProperty("net")]
        public string Net { get; set; }

        [JsonProperty("wsstamp")]
        public long Wsstamp { get; set; }

        [JsonProperty("westamp")]
        public long Westamp { get; set; }

        [JsonProperty("netstamp")]
        public long Netstamp { get; set; }

        [JsonProperty("isostart")]
        public string Isostart { get; set; }

        [JsonProperty("isoend")]
        public string Isoend { get; set; }

        [JsonProperty("isonet")]
        public string Isonet { get; set; }

        [JsonProperty("status")]
        public long Status { get; set; }

        [JsonProperty("inhold")]
        public long Inhold { get; set; }

        [JsonProperty("tbdtime")]
        public long Tbdtime { get; set; }

        [JsonProperty("vidURLs")]
        public object[] VidUrLs { get; set; }

        [JsonProperty("vidURL")]
        public object VidUrl { get; set; }

        [JsonProperty("infoURLs")]
        public object[] InfoUrLs { get; set; }

        [JsonProperty("infoURL")]
        public object InfoUrl { get; set; }

        [JsonProperty("holdreason")]
        public object Holdreason { get; set; }

        [JsonProperty("failreason")]
        public object Failreason { get; set; }

        [JsonProperty("tbddate")]
        public long Tbddate { get; set; }

        [JsonProperty("probability")]
        public long Probability { get; set; }

        [JsonProperty("hashtag")]
        public object Hashtag { get; set; }

        [JsonProperty("changed")]
        public DateTimeOffset Changed { get; set; }

        [JsonProperty("location")]
        public Location Location { get; set; }

        [JsonProperty("rocket")]
        public Rocket Rocket { get; set; }

        [JsonProperty("missions")]
        public Mission[] Missions { get; set; }

        [JsonProperty("lsp")]
        public Lsp Lsp { get; set; }
    }

    public partial class Location
    {
        [JsonProperty("pads")]
        public Pad[] Pads { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("infoURL")]
        public string InfoUrl { get; set; }

        [JsonProperty("wikiURL")]
        public string WikiUrl { get; set; }

        [JsonProperty("countryCode")]
        public string CountryCode { get; set; }
    }

    public partial class Pad
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("infoURL")]
        public string InfoUrl { get; set; }

        [JsonProperty("wikiURL")]
        public Uri WikiUrl { get; set; }

        [JsonProperty("mapURL")]
        public Uri MapUrl { get; set; }

        [JsonProperty("latitude")]
        public double Latitude { get; set; }

        [JsonProperty("longitude")]
        public double Longitude { get; set; }

        [JsonProperty("agencies")]
        public Lsp[] Agencies { get; set; }
    }

    public partial class Lsp
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("abbrev")]
        public string Abbrev { get; set; }

        [JsonProperty("countryCode")]
        public string CountryCode { get; set; }

        [JsonProperty("type")]
        public long Type { get; set; }

        [JsonProperty("infoURL")]
        public object InfoUrl { get; set; }

        [JsonProperty("wikiURL")]
        public Uri WikiUrl { get; set; }

        [JsonProperty("changed")]
        public DateTimeOffset Changed { get; set; }

        [JsonProperty("infoURLs")]
        public Uri[] InfoUrLs { get; set; }
    }

    public partial class Mission
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("description")]
        public string Description { get; set; }

        [JsonProperty("type")]
        public long Type { get; set; }

        [JsonProperty("wikiURL")]
        public Uri WikiUrl { get; set; }

        [JsonProperty("typeName")]
        public string TypeName { get; set; }

        [JsonProperty("agencies")]
        public Lsp[] Agencies { get; set; }

        [JsonProperty("payloads")]
        public object[] Payloads { get; set; }
    }

    public partial class Rocket
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("configuration")]
        public string Configuration { get; set; }

        [JsonProperty("familyname")]
        public string Familyname { get; set; }

        [JsonProperty("agencies")]
        public Lsp[] Agencies { get; set; }

        [JsonProperty("wikiURL")]
        public Uri WikiUrl { get; set; }

        [JsonProperty("infoURLs")]
        public Uri[] InfoUrLs { get; set; }

        [JsonProperty("infoURL")]
        public Uri InfoUrl { get; set; }

        [JsonProperty("imageSizes")]
        public long[] ImageSizes { get; set; }

        [JsonProperty("imageURL")]
        public Uri ImageUrl { get; set; }
    }

    public partial class Result
    {
        public static Result FromJson(string json) => JsonConvert.DeserializeObject<Result>(json, global::AstroBot.LaunchLibrary.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Result self) => JsonConvert.SerializeObject(self, global::AstroBot.LaunchLibrary.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
